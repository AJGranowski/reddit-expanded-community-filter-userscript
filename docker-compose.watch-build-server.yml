services:
  watch-build:
    build:
      args:
          USER_NAME: "watch-build"
          USER_OWNED_PATHS: "'/app/build/' '/app/build/rollup/' '/app/build/typescript/'"
      network: none
    cap_drop: ["ALL"]
    command: ["run", "watch-build"]
    entrypoint: ["npm"]
    healthcheck:
      test: ["CMD", "sh", "-c", "[ $(ps | grep nodemon | grep -v grep | wc -l) -ge 1 ]"]
      interval: 5s
      timeout: 10s
      start_period: 30s
      start_interval: 2s

    networks: ["node"]
    security_opt: ["no-new-privileges:true"]
    stop_grace_period: 1s
    volumes:
      # Bind the current directory to the working directory inside the container.
      - type: "bind"
        source: "./"
        target: "/app"

      # Rename "docker.npmrc" to ".npmrc"
      - type: "bind"
        read_only: true
        source: "./docker.npmrc"
        target: "/app/.npmrc"

      # Bind the NPM cache.
      - "~/.npm/_cacache:/tmp/npm-cache/_cacache:ro"

      # Use higher performance volumes for intermediate directories.
      - type: "volume"
        source: build_rollup
        target: "/app/build/rollup"
      - type: "volume"
        source: build_typescript
        target: "/app/build/typescript"
      - type: "volume"
        read_only: true
        source: node_modules
        target: "/app/node_modules"

    working_dir: "/app"

  server:
    depends_on:
      watch-build:
        condition: service_healthy

    attach: false
    build:
      args:
          USER_NAME: "server"
      network: none
    cap_drop: ["ALL"]
    command: ["run", "serve-release"]
    entrypoint: ["npm"]
    healthcheck:
      test: ["CMD", "sh", "-c", "[ $(ps | grep http-server | grep -v npm | grep -v grep | wc -l) -eq 1 ]"]
      start_period: 30s
      start_interval: 2s

    networks: ["server"]
    ports: ["127.0.0.1:8080:8080"]
    security_opt: ["no-new-privileges:true"]
    stop_grace_period: 2s
    volumes:
      # Bind the release files
      - "./build/release:/app/build/release:ro"

      # Bind package data
      - type: "bind"
        read_only: true
        source: "./package.json"
        target: "/app/package.json"

      # Bind the NPM cache.
      - "~/.npm/_cacache:/tmp/npm-cache/_cacache:ro"
      
      # Use pre-built node_modules
      - type: "volume"
        read_only: true
        source: node_modules
        target: "/app/node_modules"

    working_dir: "/app"

networks:
  node:
  server:

volumes:
  build_rollup:
  build_typescript:
  node_modules: