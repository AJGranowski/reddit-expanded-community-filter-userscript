# This workflow is used for continuous integration verification, and storing the resulting build artifacts.

name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
      - "!dependabot/**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker-context: ["rootless", "default"]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        disable-sudo: ${{ matrix.docker-context != 'rootless' }}
        egress-policy: block
        allowed-endpoints: >
          auth.docker.io:443
          coveralls.io:443
          dl-cdn.alpinelinux.org:443
          download.docker.com:443
          get.docker.com:443
          github.com:443
          objects.githubusercontent.com:443
          production.cloudflare.docker.com:443
          registry-1.docker.io:443
          registry.npmjs.org:443
    
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    # Maybe one day GitHub will handle this for us using path filters, but for now we need to skip all of the steps that would normally run for non-code changes ourselves.
    # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
    - name: Detect Changed Files
      id: changed-files
      uses: tj-actions/changed-files@e9772d140489982e0e3704fea5ee93d536f1e275 # v45.0.1
      with:
        files_yaml: |
          paths:
            - "**"
            - "!*.md"
            - "!.github/**"
            - ".github/workflows/*.yml"
            - "!.github/workflows/cd.yml"
    
    - name: Use Rootless Docker
      if: ${{ matrix.docker-context == 'rootless' && steps.changed-files.outputs.paths_any_changed == 'true' }}
      uses: ScribeMD/rootless-docker@6bd157a512c2fafa4e0243a8aa87d964eb890886 # 0.2.2

    - name: Validate Docker Compose Files
      if: ${{ steps.changed-files.outputs.paths_any_changed == 'true' }}
      run: |
        docker compose --file docker-compose.yml config --quiet
        docker compose --file docker-compose.watch-build-server.yml config --quiet

    - name: Docker Cache
      if: ${{ steps.changed-files.outputs.paths_any_changed == 'true' }}
      id: docker-cache
      uses: ScribeMD/docker-cache@fb28c93772363301b8d0a6072ce850224b73f74e # 0.5.0
      with:
        key: docker-${{ runner.os }}-${{ hashFiles('./images/node/Dockerfile') }}
    
    - name: NPM Cache
      if: ${{ steps.changed-files.outputs.paths_any_changed == 'true' }}
      id: npm-cache
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: "~/.npm/_cacache"
        key: npm-${{ runner.os }}-${{ hashFiles('./package-lock.json') }}

    - name: Build and Verify
      if: ${{ steps.changed-files.outputs.paths_any_changed == 'true' }}
      run: |
        chmod +x "./npm" "./user-mirror"
        ./npm -- run clean-verify
    
    - name: Upload Code Coverage
      if: ${{ matrix.docker-context == 'rootless' && steps.changed-files.outputs.paths_any_changed == 'true' }}
      uses: coverallsapp/github-action@643bc377ffa44ace6394b2b5d0d3950076de9f63 # v2.3.0

    - name: Upload Artifacts
      if: ${{ matrix.docker-context == 'rootless' && steps.changed-files.outputs.paths_any_changed == 'true' }}
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: artifacts
        path: build/release/
        if-no-files-found: error
