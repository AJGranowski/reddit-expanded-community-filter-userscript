# This workflow is used for continuous integration verification, and storing the resulting build artifacts.

name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
      - "!dependabot/**"
    paths:
      - "**"
      - "!*.md"
      - "!.github/**"
      - ".github/workflows/*.yml"
      - "!.github/workflows/cd.yml"
  pull_request:
    branches:
      - "**"
    paths:
      - "**"
      - "!*.md"
      - "!.github/**"
      - ".github/workflows/*.yml"
      - "!.github/workflows/cd.yml"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker-context: ["rootless", "default"]

    steps:
    - uses: actions/checkout@v4

    - name: Use Rootless Docker
      if: ${{ matrix.docker-context == 'rootless' }}
      uses: ScribeMD/rootless-docker@0.2.2

    - name: "Validate Docker Compose Files"
      run: |
        docker compose --file docker-compose.yml config --quiet
        docker compose --file docker-compose.watch-build-server.yml config --quiet

    - name: "Docker Cache"
      id: docker-cache
      uses: ScribeMD/docker-cache@0.3.3
      with:
        key: docker-${{ runner.os }}-${{ hashFiles('./Dockerfile') }}
    
    - name: "NPM Cache"
      id: npm-cache
      uses: actions/cache@v3
      with:
        path: "~/.npm/_cacache"
        key: npm-${{ runner.os }}-${{ hashFiles('./package-lock.json') }}

    - name: "Build and Verify"
      run: |
        chmod +x "./toolbox"
        ./toolbox -- run clean-verify

    - name: "Upload Artifacts"
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: build/release/
        if-no-files-found: error
